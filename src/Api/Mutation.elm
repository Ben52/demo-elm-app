-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Mutation exposing (CreateDraftRequiredArguments, CreateUserOptionalArguments, CreateUserRequiredArguments, DeletePostRequiredArguments, PublishRequiredArguments, createDraft, createUser, deletePost, publish)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


type alias CreateUserOptionalArguments =
    { email : OptionalArgument String }


type alias CreateUserRequiredArguments =
    { name : String }


{-|

  - name -
  - email -

-}
createUser : (CreateUserOptionalArguments -> CreateUserOptionalArguments) -> CreateUserRequiredArguments -> SelectionSet decodesTo Api.Object.User -> SelectionSet (Maybe decodesTo) RootMutation
createUser fillInOptionals requiredArgs object_ =
    let
        filledInOptionals =
            fillInOptionals { email = Absent }

        optionalArgs =
            [ Argument.optional "email" filledInOptionals.email Encode.string ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "createUser" (optionalArgs ++ [ Argument.required "name" requiredArgs.name Encode.string ]) object_ (identity >> Decode.nullable)


type alias CreateDraftRequiredArguments =
    { title : String
    , userId : Api.Scalar.Id
    }


{-|

  - title -
  - userId -

-}
createDraft : CreateDraftRequiredArguments -> SelectionSet decodesTo Api.Object.Post -> SelectionSet decodesTo RootMutation
createDraft requiredArgs object_ =
    Object.selectionForCompositeField "createDraft" [ Argument.required "title" requiredArgs.title Encode.string, Argument.required "userId" requiredArgs.userId (\(Api.Scalar.Id raw) -> Encode.string raw) ] object_ identity


type alias PublishRequiredArguments =
    { postId : Api.Scalar.Id }


{-|

  - postId -

-}
publish : PublishRequiredArguments -> SelectionSet decodesTo Api.Object.Post -> SelectionSet (Maybe decodesTo) RootMutation
publish requiredArgs object_ =
    Object.selectionForCompositeField "publish" [ Argument.required "postId" requiredArgs.postId (\(Api.Scalar.Id raw) -> Encode.string raw) ] object_ (identity >> Decode.nullable)


type alias DeletePostRequiredArguments =
    { id : Api.Scalar.Id }


{-|

  - id -

-}
deletePost : DeletePostRequiredArguments -> SelectionSet decodesTo Api.Object.Post -> SelectionSet decodesTo RootMutation
deletePost requiredArgs object_ =
    Object.selectionForCompositeField "deletePost" [ Argument.required "id" requiredArgs.id (\(Api.Scalar.Id raw) -> Encode.string raw) ] object_ identity
