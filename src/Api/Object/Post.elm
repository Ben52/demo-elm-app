-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.Post exposing (author, id, published, title)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| -}
id : SelectionSet Api.Scalar.Id Api.Object.Post
id =
    Object.selectionForField "Scalar.Id" "id" [] (Object.scalarDecoder |> Decode.map Api.Scalar.Id)


{-| -}
title : SelectionSet String Api.Object.Post
title =
    Object.selectionForField "String" "title" [] Decode.string


{-| -}
published : SelectionSet Bool Api.Object.Post
published =
    Object.selectionForField "Bool" "published" [] Decode.bool


{-| -}
author : SelectionSet decodesTo Api.Object.User -> SelectionSet (Maybe decodesTo) Api.Object.Post
author object_ =
    Object.selectionForCompositeField "author" [] object_ (identity >> Decode.nullable)
