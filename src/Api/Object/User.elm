-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.User exposing (email, id, name, posts, selection)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.Union
import Graphql.Field as Field exposing (Field)
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) Api.Object.User
selection constructor =
    Object.selection constructor


{-| -}
id : Field Api.Scalar.Id Api.Object.User
id =
    Object.fieldDecoder "id" [] (Object.scalarDecoder |> Decode.map Api.Scalar.Id)


{-| -}
email : Field (Maybe String) Api.Object.User
email =
    Object.fieldDecoder "email" [] (Decode.string |> Decode.nullable)


{-| -}
name : Field String Api.Object.User
name =
    Object.fieldDecoder "name" [] Decode.string


{-| -}
posts : SelectionSet decodesTo Api.Object.Post -> Field (List decodesTo) Api.Object.User
posts object_ =
    Object.selectionField "posts" [] object_ (identity >> Decode.list)
